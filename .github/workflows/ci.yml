name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    
permissions:
  id-token: write
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Update Workloads
      run: |
        dotnet workload update
        dotnet workload restore
    - name: Install Workloads
      run: dotnet workload install aspire
    - name: Restore dependencies
      run: dotnet restore eShop.Web.slnf
    - name: Build
      run: dotnet build eShop.Web.slnf --no-restore
    - name: Test
      run: dotnet test eShop.Web.slnf --no-build --verbosity normal
    - name: Build container images
      run: dotnet publish src/Catalog.API/Catalog.API.csproj  /t:PublishContainer -p ContainerRepository=eshop/catalog.api -p ContainerImageTag=main
    - name: Log into ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_ENDPOINT }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: Push container images to ACR
      run: | 
        docker tag eshop/catalog.api:main ${{ secrets.ACR_ENDPOINT }}/eshop/catalog.api:main
        docker push ${{ secrets.ACR_ENDPOINT }}/eshop/catalog.api:main
    #- name: Login to Azure
    #  uses: azure/login@v1
    #  with:
    #    client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #    tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #    subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    # - name: Build and push container images to ACR
    # run: az acr task run --registry ${{ secrets.ACR }} --name buildtask-catalogapi
